{mode, max}.

{duration, 1}.

{concurrent, 3}.

{driver, basho_bench_driver_riakc_java}.

{key_generator, {int_to_bin, {uniform_int, 10000}}}.

{value_generator, {fixed_bin, 10000}}.

%% The options for transport are pb, http,
%% pbcluster, or httpcluster
{riakc_java_transport, pbcluster}.

%% The list of remote Java client nodes you want to bench.
%% Each entry is a tupple of the format
%% {node(), [{inet:ip4_address(), inet:port_number()}]}
%% Where host is the Jinterface node and
%% each ip and port tuple form the address of the
%% Riak interface that Java client could call. 
%% If the transport type is pb or http, the basho_bench
%% driver will select one of the provided {ip, port} 
%% tuples to communicate with. If the transport type is
%% pbcluster or httpcluster then the provided {ip, port}
%% tuples will be used to form a java client cluster.

{riakc_java_nodes, {'java@127.0.0.1', [{{192,168,1,101}, 8087}]}}.

%% The transport you want the java client to use
%% ether pb (for protocol buffers) or http.

{riakc_java_transport, pb}.

%% The size for the protocol buffers client
%% socket buffers, in kb.

{riakc_java_pbc_buffer, 16}.

{riakc_java_replies, 1}.

{operations, [{get, 1}, {update, 1}]}.

