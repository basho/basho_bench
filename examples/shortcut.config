{mode, max}.
{duration, infinity}.
{concurrent, 8}.
{driver, basho_bench_driver_shortcut}.
{key_generator, {int_to_bin,{sequential_int, 50000}}}.

{value_generator, {fixed_bin, 100}}.

{operations, [{put, 1}]}.

%% The second element in the list below (e.g., "../../public/bitcask")
%% must point to the relevant directory of a bitcask installation.
%% We must also have a correct path to the riak_core app.
{code_paths, [%% "../../public/bitcask",
              "/Users/fritchie/b/src/riak_core",
              "/Users/fritchie/b/src/riak_kv",
              "/Users/fritchie/b/src/riak/deps/sext",
              "/Users/fritchie/b/src/eleveldb",
              "/Users/fritchie/b/src/hanoidb",
              "/Users/fritchie/b/src/hanoidb/deps/plain_fsm",
              "/Users/fritchie/b/src/hanoidb/deps/ebloom",
              "/Users/fritchie/b/src/riak/deps/bitcask"]}.

%% Mandatory shortcut driver configuration items

%% Supported drivers: eleveldb, bitcask, hanoidb
%{shortcut_backend, eleveldb}.
%{shortcut_backend, bitcask}.
{shortcut_backend, hanoidb}.

%% Flags for opening backend instances
%{shortcut_backend_flags, [{compression, false}]}. % eleveldb
%{shortcut_backend_flags, []}.                     % bitcask
{shortcut_backend_flags, [{compress, none}, {merge_strategy, fast}]}. % hanoidb

%% Path to the data dir ... for the adventurous, make this path the
%% same as your Riak data dir.
%{shortcut_data_dir, "/Users/fritchie/b/src/riak/rel/riak/data/leveldb"}.
%{shortcut_data_dir, "/Users/fritchie/b/src/riak/rel/riak/data/bitcask"}.
{shortcut_data_dir, "/Users/fritchie/b/src/riak.hanoidb/rel/riak/data/hanoidb"}.

%% Use the same ring size as Riak's riak_core app's ring_creation_size.
{shortcut_ring_creation_size, 64}.

%% Typical n_val = 3
{shortcut_n_val, 3}.

%% Name of the Riak KV bucket that this driver will be storing keys for.
%% Must match driver-specific config options used in later basho_bench runs!
{shortcut_bucket, <<"b1">>}.

%% If you're not interested in using the output of the shortcut driver
%% to pre-populate Riak KV application backend data stores, then set
%% this value to false.  When false, the values stored will be exact
%% as generated by the basho_bench value generator.
{shortcut_store_riak_object, true}. % If false, store generated value as-is.
