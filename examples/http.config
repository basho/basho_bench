{mode, max}.

{duration, 1}.

{concurrent, 1}.

{driver, basho_bench_driver_http}.

%% Default generators, reference by the atoms key_generator and value_generator
{key_generator, {int_to_str, {partitioned_sequential_int, 50000}}}.
{value_generator, {fixed_bin, 10000}}.

%%% Generators: {Name, KeyGen | ValGen}
% Name: atom()
% KeyGen: User or Basho Bench defined key generator
% ValGen: User or Basho Bench defined value generator
{generators, [
              {string_g, {key_generator, {int_to_str, {uniform_int, 50000}}}},
              {binstring_g, {value_generator, {fixed_bin, 100}}}
             ]}.

%%% Values: {Name, Value}
%%%         {Name, {FormattedValue, Generators}}
% Name: atom()
% Value: string() | atom() - named generator, can be key_generator or value_generator for default
% FormattedValue: string() - formatted with io_lib:format
% Generators: list() - list of generators, can be key_generator or value_generator for default
{values, [
          {json_v, {"{\"this\":\"is_json_~s\"}", [string_g]}},
          {xml_v, {"<?xml version=\"1.0\"?><catalog><book><author>~s</author></book></catalog>", [binstring_g]}},
          {plainstring_v, "hello"},
          {smallbin_v, binstring_g},
          {largebin_v, value_generator}
         ]}.

%%% Headers: {Name, Headers}
% Name: atom()
% Headers: proplist()
{headers, [
           {json_h, [{'Content-Type', 'application/json'}, {'Accept', 'application/json'}]},
           {xml_h, [{'Content-Type', 'application/xml'}]},
           {binary_h, [{'Content-Type', 'application/octet-stream'}]},
           {empty_h, []}
          ]}.

%%% Targets: {Name, {Host, Port, Path}}
%%%          {Name, [{Host1, Port1, Path1},{Host2, Port2, Path2},...]}
%%%          {Name, {Host, Port, {FormattedPath, Generators}}}
%%%          {Name, [{Host1, Port1, {FormattedPath1, Generators1}},{Host2, Port2, {FormattedPath2, Generators2}},...]}
% Name: atom()
% Host: string()
% Port: integer()
% Path: string()
% FormattedPath: string() - formatted with io_lib:format
% Generators: list() - list of generators, can be key_generator or value_generator for default
{targets, [
           {base_uri_t, {"localhost", 4567, "/"}},
           {multi_base_uri_t, [{"localhost", 4567, "/"},{"localhost", 4568, "/"}]},
           {with_key_t, {"localhost", 4567, {"/~s", [key_generator]}}},
           {multi_with_key_t, [{"localhost", 4567, {"/~s", [key_generator]}},{"localhost", 4568, {"/~s", [key_generator]}}]},
           {with_another_key_t, {"localhost", 4567, {"/another/~s", [string_g]}}},
           {smallbin_t, {"localhost", 4567, {"/smallbin/~s", [key_generator]}}},
           {upload_t, {"localhost", 4567, {"/upload/~s", [key_generator]}}}
          ]}.

%%% Operations: {{get|delete, Target}, Weight}
%%%             {{get|delete, Target, Header}, Weight}
%%%             {{put|post, Target, Value}, Weight}
%%%             {{put|post, Target, Value, Header}, Weight}
% Target: atom() - defined target
% Header: atom() - defined header
% Value: atom() - defined value
% Weight: integer() - ratio of this operation to the rest (ThisWeight / TotalWeightSum = % of this Operation)

{operations, [
              %% Get without a key
              {{get, base_uri_t}, 1},
              %% Get without a key on multiple targets
              {{get, multi_base_uri_t}, 1},
              %% Get with a key and headers
              {{get, with_key_t, json_h}, 1},
              %% Get with a key and headers on multiple targets
              {{get, multi_with_key_t, json_h}, 1},
              %% Put with a json object
              {{put, base_uri_t, json_v, json_h}, 1},
              %% Post with an xml object and value
              {{post, with_key_t, xml_v, xml_h}, 1},
              %% Alternate keygen with plaintext
              {{post, with_another_key_t, plainstring_v, empth_h}, 1},
              %% Binary value
              {{post, smallbin_t, smallbin_v, binary_h}, 1},
              %% Large binary value using default value gen
              {{post, upload_t, largebin_v, binary_h}, 1},
              %% Delete with a key
              {{delete, with_key_t}, 1}
             ]}.
